version: "3.3"

name: togethercrew

networks:
  public:
  private:

x-logging:
  &logging
  logging:
    driver: "json-file"
    options:
      max-size: 10m
      max-file: 3

services:

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik:/etc/traefik:ro
      - ./certs:/etc/certs:ro
      - ./userFile:/userFile:ro
    networks:
      - public
      - private
    env_file:
      - .env.traefik
    # <<: *logging

  # whoami:
  #   image: traefik/whoami
  #   container_name: whoami
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.whoami.rule=Host(`whoami.${HOST_NAME}`)
  #     - traefik.http.routers.whoami.entrypoints=https
  #     # - traefik.http.routers.whoami.tls.certresolver=myresolver
  #   networks:
  #     - private

#   mongo:
#     image: mongo:7.0.1
#     container_name: mongo
#     restart: unless-stopped
#     env_file:
#       - ./.env.mongo
#     volumes:
#       - mongo:/data/db
#       - ./services/mongo/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
#     networks:
#       - private
#     labels:
#       - traefik.enable=true
#       # - traefik.tcp.routers.mongo.rule=HostSNI(`${HOST_NAME}`)
#       - traefik.tcp.routers.mongo.rule=HostSNI(`*`)
#       - traefik.tcp.routers.mongo.service=mongo
#       # - traefik.tcp.routers.mongo.entrypoints=mongo
#       - traefik.tcp.services.mongo.loadbalancer.server.port=27001
#       # - traefik.http.routers.mongo.tls.certresolver=myresolver
#       # - traefik.http.routers.mongo.entrypoints=websecure

volumes:
  mongo: